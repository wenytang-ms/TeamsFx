name: "Lint PR"

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
    branches:
      - main
      - dev
      - prerelease
      - hotfix/**/*
  schedule:
    - cron: "0 8 * * *"

jobs:
  attension-on-version:
    if: ${{ github.event_name ==  'pull_request' && (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'prerelease') && github.event.action != 'edited' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: check feature history
        id: description
        shell: "/bin/bash {0}"
        run: |
          head=$(git describe --first-parent --abbrev=0)
          echo $head
          history_cli_feat=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/cli | grep "^feat")
          echo $history_cli_feat
          history_toolkit_feat=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/vscode-extension | grep "^feat")
          echo $history_toolkit_feat
          history_core_feat=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/fx-core | grep "^feat")
          echo $history_core_feat
          history_sdk_feat=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/sdk | grep "^feat")
          echo $history_sdk_feat
          echo -e '\nFx-core feat commits:\n' "$history_core_feat" '\n\nCLI feat commits:\n' "$history_cli_feat" '\n\nExtension-toolkit feat commits:\n' "$history_toolkit_feat" '\n\nSDK feat commits:\n' "$history_sdk_feat" '\n' > feat_history.txt
          history_cli_fix=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/cli | grep "^fix")
          echo $history_cli_fix
          history_toolkit_fix=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/vscode-extension | grep "^fix")
          echo $history_toolkit_fix
          history_core_fix=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/fx-core | grep "^fix")
          echo $history_core_fix
          history_sdk_fix=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/sdk | grep "^fix")
          echo $history_sdk_fix
          echo -e '\nFx-core fix commits:\n' "$history_core_fix" '\n\nCLI fix commits:\n' "$history_cli_fix" '\n\nExtension-toolkit fix commits:\n' "$history_toolkit_fix" '\n\nSDK fix commits:\n' "$history_sdk_fix" '\n' > fix_history.txt
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: set git
        run: |
          git config --global user.name 'ACCC'
          git config --global user.email 'bbd@microsoft.com'
      - name: lerna expect pre version
        if: ${{ github.event.pull_request.base.ref == 'prerelease' }}
        run: |
          npx lerna version prerelease --preid=beta.$(date "+%Y%m%d%H") --exact --no-push --allow-branch ${{ github.event.pull_request.head.ref }} --ignore-scripts --yes
          npx lerna changed -l | awk '{ print $1 "\t" $2 }'> version_info.txt
      - name: lerna expect rc version
        if: ${{ github.event.pull_request.base.ref == 'main' }}
        run: |
          npx lerna version --conventional-commits --conventional-prerelease --preid=rc --no-git-tag-version --allow-branch ${{ github.event.pull_request.head.ref }} --yes
          npx lerna changed -l | awk '{ print $1 "\t" $2 }'> version_info.txt
      - uses: edwardgeorge/file-outputs-action@main
        id: test
        with:
          files: |
            output1=version_info.txt
            outpot2=feat_history.txt
            output3=fix_history.txt
      - uses: riskledger/update-pr-description@v2
        with:
          body: ${{join(steps.test.outputs.*, '')}}
          token: ${{ secrets.GITHUB_TOKEN }}

